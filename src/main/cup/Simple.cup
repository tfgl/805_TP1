/* package et imports */
package fr.usmb.m1isc.compilation.simple;
import java_cup.runtime.Symbol;

// nom de la classe a generer
class SimpleParser;

/* inclusion du code */

action code {: 
    // pour utilisation dans les actions (classe action)
:};


parser code {:
    // pour le parser (redefinition de la methode reportant les erreurs d'analyse)
    public void report_error(String message, Object info) {
        String m = "";
        if (info instanceof java_cup.runtime.Symbol) {
            Symbol s = ((Symbol) info);     
            if (s.left >= 0) {
                /* Ajoute le numero de ligne  */
                m = m + "Ligne " + (s.left+1) + " ";
            }
            if (s.right >= 0) {
                /* Ajoute le numero de colonne  */
                m = m + "Colonne " + (s.right+1) + " ";
            }
            if (s.left >=0  || s.right >= 0) {
                m = m + ": ";            
            }
        }
        m = m + "Erreur de syntaxe";
        System.out.println(m);
    }
:};

 init with {:
    //    initialisation du parser
:};

/* symboles terminaux */
terminal NOMBRE, ADD, SUB, DIV, MUL, POINT, LPAR, RPAR;
terminal ERROR;

/* non terminaux */
non terminal operation , texte;

/* grammaire */

texte   ::= operation texte 
          | operation ; 

operation  ::= NOMBRE:a ADD NOMBRE:b {: RESULT = ((Integer)a).intValue() + ((Integer)b).intValue(); System.out.println(RESULT); :} POINT 
          | NOMBRE:a SUB NOMBRE:b {: RESULT = ((Integer)a).intValue() - ((Integer)b).intValue(); System.out.println(RESULT); :} POINT
          | NOMBRE:a DIV NOMBRE:b {: RESULT = ((Integer)a).intValue() / ((Integer)b).intValue(); System.out.println(RESULT); :} POINT
          | NOMBRE:a MUL NOMBRE:b {: RESULT = ((Integer)a).intValue() * ((Integer)b).intValue(); System.out.println(RESULT); :} POINT
          | NOMBRE
          | error POINT 
          ;


